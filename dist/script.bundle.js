/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Ball.ts":
/*!*********************!*\
  !*** ./src/Ball.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Ball\": () => (/* binding */ Ball)\n/* harmony export */ });\n/**\r\n *  class that's creates the ball\r\n */\r\nvar Ball = /** @class */ (function () {\r\n    /** constructor which creates the ball */\r\n    function Ball() {\r\n        /** readonly array of colors whiches will be drawing one of them  */\r\n        this.colors = [\"red\", \"green\", \"blue\", \"orange\", \"white\", \"yellow\", \"#222\"];\r\n        var ball = document.createElement(\"div\");\r\n        ball.classList.add(\"ball\");\r\n        this.HTMLBallElement = ball;\r\n        this.color = this.getRandomColor();\r\n        // this.HTMLBallElement.style.background = \"radial-gradient(circle at 10px 10px, \" + this.color + \", #000)\"\r\n        this.HTMLBallElement.style.backgroundColor = this.color;\r\n    }\r\n    /**\r\n     * function that's draws the color\r\n     *\r\n     * @returns the drawn color\r\n     */\r\n    Ball.prototype.getRandomColor = function () { return this.colors[Math.floor(Math.random() * this.colors.length)]; };\r\n    return Ball;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://kulki/./src/Ball.ts?");

/***/ }),

/***/ "./src/Board.ts":
/*!**********************!*\
  !*** ./src/Board.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Board\": () => (/* binding */ Board),\n/* harmony export */   \"board\": () => (/* binding */ board)\n/* harmony export */ });\n/* harmony import */ var _Data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Data */ \"./src/Data.ts\");\n/* harmony import */ var _Cell__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cell */ \"./src/Cell.ts\");\n/* harmony import */ var _Ball__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Ball */ \"./src/Ball.ts\");\n\r\n\r\n\r\n/** root HTML object where table is created */\r\nvar root = document.getElementById(\"root\");\r\n/** nextBalls HTML object which shows three next balls  */\r\nvar nextBallsElement = document.getElementById(\"nextBalls\");\r\n/**\r\n * board objact contains virtual array of Cells\r\n *\r\n * need to init new Board to create\r\n */\r\nvar Board = /** @class */ (function () {\r\n    /**\r\n     * The constructor of Board\r\n     *\r\n     * @param boardSize setting the size of an array\r\n     */\r\n    function Board(boardSize) {\r\n        /** array of cells which will be generated later*/\r\n        this.array = [[]];\r\n        /** variable to save id of clicked started cell */\r\n        this.startCellId = \"\";\r\n        /** variable for throwing out balls */\r\n        this.ballsArr = [];\r\n        /** variable for temporary saving balls' id */\r\n        this.tempBallsArr = [];\r\n        /** score sum */\r\n        this.sum = 0;\r\n        /** game score */\r\n        this.score = 0;\r\n        this.size = boardSize;\r\n        this.generateArray();\r\n        this.generateTable();\r\n        this.generateBalls(3);\r\n        this.drawBalls();\r\n    }\r\n    /** function that's generates array of Cells */\r\n    Board.prototype.generateArray = function () {\r\n        for (var y = 0; y < this.size; y++) {\r\n            this.array[y] = [];\r\n            for (var x = 0; x < this.size; x++)\r\n                this.array[y][x] = new _Cell__WEBPACK_IMPORTED_MODULE_1__.Cell(x, y);\r\n        }\r\n    };\r\n    /** function that's generates HTMLs table */\r\n    Board.prototype.generateTable = function () {\r\n        var _a;\r\n        (_a = document.querySelector(\"table\")) === null || _a === void 0 ? void 0 : _a.remove();\r\n        var table;\r\n        var tBody;\r\n        table = document.createElement('table');\r\n        tBody = table.createTBody();\r\n        for (var y = 0; y < this.array.length; y++) {\r\n            var row = table.insertRow();\r\n            for (var x = 0; x < this.array[y].length; x++) {\r\n                var cell = row.insertCell();\r\n                this.array[y][x].setHTMLCellElement(cell);\r\n            }\r\n        }\r\n        root.appendChild(table);\r\n    };\r\n    /** function that's generates first three balls in the array */\r\n    Board.prototype.generateBalls = function (n) {\r\n        var randomX;\r\n        var randomY;\r\n        for (var i = 0; i < n; i++) {\r\n            while (true) {\r\n                randomX = Math.floor(Math.random() * this.size);\r\n                randomY = Math.floor(Math.random() * this.size);\r\n                if (this.array[randomY][randomX].value == '') {\r\n                    this.array[randomY][randomX].value = 'X';\r\n                    this.array[randomY][randomX].HTMLCellElement.appendChild(new _Ball__WEBPACK_IMPORTED_MODULE_2__.Ball().HTMLBallElement);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /** functions that's creating three next balls */\r\n    Board.prototype.drawBalls = function () {\r\n        for (var i = 0; i < 3; i++)\r\n            nextBallsElement.appendChild(new _Ball__WEBPACK_IMPORTED_MODULE_2__.Ball().HTMLBallElement);\r\n    };\r\n    /** function that's inserting three drawed balls*/\r\n    Board.prototype.insertNextBalls = function () {\r\n        var emptyCells = 0;\r\n        this.array.forEach(function (row) { return row.forEach(function (el) {\r\n            if (el.value == \"\")\r\n                emptyCells++;\r\n        }); });\r\n        if (emptyCells > 2) {\r\n            for (var i = 0; i < 3; i++) {\r\n                var randomX = void 0;\r\n                var randomY = void 0;\r\n                while (true) {\r\n                    randomX = Math.floor(Math.random() * this.size);\r\n                    randomY = Math.floor(Math.random() * this.size);\r\n                    if (this.array[randomY][randomX].value == '') {\r\n                        this.array[randomY][randomX].value = 'X';\r\n                        this.array[randomY][randomX].HTMLCellElement.appendChild(nextBallsElement.children[0]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            this.drawBalls();\r\n        }\r\n    };\r\n    /** funtion that's sets the id of starting cell */\r\n    Board.prototype.setStartCellId = function (id) { this.startCellId = id; };\r\n    Board.prototype.removeCellsListneres = function () {\r\n        this.array.forEach(function (row) { return row.forEach(function (el) {\r\n            el.HTMLCellElement.onclick = function () { return \"\"; };\r\n            el.HTMLCellElement.onmousemove = function () { return \"\"; };\r\n        }); });\r\n    };\r\n    /** funtion that's starts to find the path to selected cell */\r\n    Board.prototype.findPath = function () {\r\n        var x = parseInt(this.startCellId[0]);\r\n        var y = parseInt(this.startCellId[2]);\r\n        this.array.forEach(function (row) { return row.forEach(function (el) {\r\n            el.move = _Data__WEBPACK_IMPORTED_MODULE_0__.size * _Data__WEBPACK_IMPORTED_MODULE_0__.size;\r\n        }); });\r\n        this.findNextPath(x, y, 0);\r\n    };\r\n    /**\r\n     * function that's searches the path\r\n     *\r\n     * @param x x index of an array\r\n     * @param y y index of an array\r\n     * @param num number of step from start cell\r\n     */\r\n    Board.prototype.findNextPath = function (x, y, num) {\r\n        var _this = this;\r\n        var cell = this.array[y][x];\r\n        if (cell.value != \"X\" && cell.move > num) {\r\n            cell.move = num;\r\n            if (cell.value == \"F\") {\r\n                cell.HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_0__.pathColor;\r\n                this.array.forEach(function (row) { return row.forEach(function (el) {\r\n                    // if (el.id == this.startCellId) el.HTMLCellElement.style.backgroundColor = pathColor\r\n                    if (el.value == \"S\" || el.id == _this.startCellId)\r\n                        el.HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_0__.pathColor;\r\n                    else\r\n                        el.HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_0__.cellColor;\r\n                }); });\r\n                this.checkPath(x, y, num);\r\n            }\r\n            else {\r\n                if (x < this.size - 1)\r\n                    this.findNextPath(x + 1, y, num + 1);\r\n                if (x > 0)\r\n                    this.findNextPath(x - 1, y, num + 1);\r\n                if (y < this.size - 1)\r\n                    this.findNextPath(x, y + 1, num + 1);\r\n                if (y > 0)\r\n                    this.findNextPath(x, y - 1, num + 1);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * function that's checking cells around to find the path\r\n     *\r\n     * @param x x index of an array\r\n     * @param y y index of an array\r\n     * @param num number of step from start cell\r\n     * @returns to finish the function\r\n     */\r\n    Board.prototype.checkPath = function (x, y, num) {\r\n        var _a, _b, _c, _d;\r\n        if (((_a = this.array[y - 1]) === null || _a === void 0 ? void 0 : _a[x]) != undefined) {\r\n            if (this.array[y - 1][x].move < num && this.array[y - 1][x].value != \"X\") {\r\n                this.checkPath(x, y - 1, this.array[y - 1][x].move);\r\n                this.array[y][x].HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_0__.pathColor;\r\n                return \"\";\r\n            }\r\n        }\r\n        if (((_b = this.array[y + 1]) === null || _b === void 0 ? void 0 : _b[x]) != undefined) {\r\n            if (this.array[y + 1][x].move < num && this.array[y + 1][x].value != \"X\") {\r\n                this.checkPath(x, y + 1, this.array[y + 1][x].move);\r\n                this.array[y][x].HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_0__.pathColor;\r\n                return \"\";\r\n            }\r\n        }\r\n        if (((_c = this.array[y]) === null || _c === void 0 ? void 0 : _c[x - 1]) != undefined) {\r\n            if (this.array[y][x - 1].move < num && this.array[y][x - 1].value != \"X\") {\r\n                this.checkPath(x - 1, y, this.array[y][x - 1].move);\r\n                this.array[y][x].HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_0__.pathColor;\r\n                return \"\";\r\n            }\r\n        }\r\n        if (((_d = this.array[y]) === null || _d === void 0 ? void 0 : _d[x + 1]) != undefined) {\r\n            if (this.array[y][x + 1].move < num && this.array[y][x + 1].value != \"X\") {\r\n                this.checkPath(x + 1, y, this.array[y][x + 1].move);\r\n                this.array[y][x].HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_0__.pathColor;\r\n                return \"\";\r\n            }\r\n        }\r\n    };\r\n    /** checking if there is the ball */\r\n    Board.prototype.checkBalls = function () {\r\n        var _this = this;\r\n        this.array.forEach(function (row) { return row.forEach(function (el) {\r\n            if (el.HTMLCellElement.children.length > 0) {\r\n                var child = el.HTMLCellElement.children[0];\r\n                _this.checkColorsAround(parseInt(el.id[0]), parseInt(el.id[2]), child.style.backgroundColor);\r\n            }\r\n        }); });\r\n        if (this.ballsArr.length >= _Data__WEBPACK_IMPORTED_MODULE_0__.lineLength) {\r\n            this.ballsArr.forEach(function (el) {\r\n                if (_this.array[parseInt(el[2])][parseInt(el[0])].HTMLCellElement.children.length > 0)\r\n                    _this.array[parseInt(el[2])][parseInt(el[0])].HTMLCellElement.children[0].remove();\r\n                _this.array[parseInt(el[2])][parseInt(el[0])].value = \"\";\r\n            });\r\n            this.score += this.ballsArr.length;\r\n            this.ballsArr = [];\r\n            return true;\r\n        }\r\n        this.score += this.ballsArr.length;\r\n        this.ballsArr = [];\r\n        return false;\r\n    };\r\n    /**\r\n     * checking if declared color around the ball\r\n     *\r\n     * @param x x index of an array\r\n     * @param y y index of an array\r\n     * @param color color of the balls\r\n     */\r\n    Board.prototype.checkColorsAround = function (x, y, color) {\r\n        var _this = this;\r\n        var first = x - 1;\r\n        var second = y + 1;\r\n        if (first >= 0 && first < _Data__WEBPACK_IMPORTED_MODULE_0__.size && second >= 0 && second < _Data__WEBPACK_IMPORTED_MODULE_0__.size) {\r\n            if (this.array[second][first].HTMLCellElement.children.length > 0) {\r\n                var child = this.array[second][first].HTMLCellElement.children[0];\r\n                if (child.style.backgroundColor == color) {\r\n                    this.tempBallsArr.push(x + \"_\" + y);\r\n                    this.checkColorDir(x, y, -1, 1, color);\r\n                    if (this.tempBallsArr.length >= _Data__WEBPACK_IMPORTED_MODULE_0__.lineLength) {\r\n                        this.tempBallsArr.forEach(function (element) {\r\n                            if (_this.ballsArr.indexOf(element) < 0)\r\n                                _this.ballsArr.push(element);\r\n                        });\r\n                    }\r\n                    this.tempBallsArr = [];\r\n                }\r\n            }\r\n        }\r\n        first = x + 1;\r\n        second = y;\r\n        if (first >= 0 && first < _Data__WEBPACK_IMPORTED_MODULE_0__.size && second >= 0 && second < _Data__WEBPACK_IMPORTED_MODULE_0__.size) {\r\n            if (this.array[second][first].HTMLCellElement.children.length > 0) {\r\n                var child = this.array[second][first].HTMLCellElement.children[0];\r\n                if (child.style.backgroundColor == color) {\r\n                    this.tempBallsArr.push(x + \"_\" + y);\r\n                    this.checkColorDir(x, y, 1, 0, color);\r\n                    if (this.tempBallsArr.length >= _Data__WEBPACK_IMPORTED_MODULE_0__.lineLength) {\r\n                        this.tempBallsArr.forEach(function (element) {\r\n                            if (_this.ballsArr.indexOf(element) < 0)\r\n                                _this.ballsArr.push(element);\r\n                        });\r\n                    }\r\n                    this.tempBallsArr = [];\r\n                }\r\n            }\r\n        }\r\n        first = x + 1;\r\n        second = y + 1;\r\n        if (first >= 0 && first < _Data__WEBPACK_IMPORTED_MODULE_0__.size && second >= 0 && second < _Data__WEBPACK_IMPORTED_MODULE_0__.size) {\r\n            if (this.array[second][first].HTMLCellElement.children.length > 0) {\r\n                var child = this.array[second][first].HTMLCellElement.children[0];\r\n                if (child.style.backgroundColor == color) {\r\n                    this.tempBallsArr.push(x + \"_\" + y);\r\n                    this.checkColorDir(x, y, 1, 1, color);\r\n                    if (this.tempBallsArr.length >= _Data__WEBPACK_IMPORTED_MODULE_0__.lineLength) {\r\n                        this.tempBallsArr.forEach(function (element) {\r\n                            if (_this.ballsArr.indexOf(element) < 0)\r\n                                _this.ballsArr.push(element);\r\n                        });\r\n                    }\r\n                    this.tempBallsArr = [];\r\n                }\r\n            }\r\n        }\r\n        first = x;\r\n        second = y + 1;\r\n        if (first >= 0 && first < _Data__WEBPACK_IMPORTED_MODULE_0__.size && second >= 0 && second < _Data__WEBPACK_IMPORTED_MODULE_0__.size) {\r\n            if (this.array[second][first].HTMLCellElement.children.length > 0) {\r\n                var child = this.array[second][first].HTMLCellElement.children[0];\r\n                if (child.style.backgroundColor == color) {\r\n                    this.tempBallsArr.push(x + \"_\" + y);\r\n                    this.checkColorDir(x, y, 0, 1, color);\r\n                    if (this.tempBallsArr.length >= _Data__WEBPACK_IMPORTED_MODULE_0__.lineLength) {\r\n                        this.tempBallsArr.forEach(function (element) {\r\n                            if (_this.ballsArr.indexOf(element) < 0)\r\n                                _this.ballsArr.push(element);\r\n                        });\r\n                    }\r\n                    this.tempBallsArr = [];\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * checking if declared number of balls is in row\r\n     *\r\n     * @param x x index of an array\r\n     * @param y y index of an array\r\n     * @param i horizontal move\r\n     * @param j vertical move\r\n     * @param color color of the balls\r\n     * @returns number of same color in row\r\n     */\r\n    Board.prototype.checkColorDir = function (x, y, i, j, color) {\r\n        var first = x + i;\r\n        var second = y + j;\r\n        if (first >= 0 && first < _Data__WEBPACK_IMPORTED_MODULE_0__.size && second >= 0 && second < _Data__WEBPACK_IMPORTED_MODULE_0__.size) {\r\n            if (this.array[second][first].HTMLCellElement.children.length > 0) {\r\n                var child = this.array[second][first].HTMLCellElement.children[0];\r\n                if (child.style.backgroundColor == color) {\r\n                    this.tempBallsArr.push(first + \"_\" + second);\r\n                    return 1 + this.checkColorDir(first, second, i, j, color);\r\n                }\r\n                else\r\n                    return 0;\r\n            }\r\n            else\r\n                return 0;\r\n        }\r\n        else\r\n            return 0;\r\n    };\r\n    /** function that's updating the score board */\r\n    Board.prototype.updateScore = function () {\r\n        var scoreBoard = document.getElementById(\"scoreBoard\");\r\n        scoreBoard.innerHTML = \"Wynik: \" + this.score;\r\n    };\r\n    /** ending the game if there is no more free space */\r\n    Board.prototype.endGame = function () {\r\n        var emptyCells = 0;\r\n        this.array.forEach(function (row) { return row.forEach(function (el) {\r\n            if (el.value == \"\")\r\n                emptyCells++;\r\n        }); });\r\n        if (emptyCells == 0) {\r\n            this.removeCellsListneres();\r\n            alert(\"Twój wynik: \" + this.score);\r\n        }\r\n    };\r\n    return Board;\r\n}());\r\n\r\n/** declaring the board */\r\nvar board = new Board(_Data__WEBPACK_IMPORTED_MODULE_0__.size);\r\n\n\n//# sourceURL=webpack://kulki/./src/Board.ts?");

/***/ }),

/***/ "./src/Cell.ts":
/*!*********************!*\
  !*** ./src/Cell.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Cell\": () => (/* binding */ Cell)\n/* harmony export */ });\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Board */ \"./src/Board.ts\");\n/* harmony import */ var _Data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Data */ \"./src/Data.ts\");\n\r\n\r\n/**\r\n *  class of a cell in board\r\n */\r\nvar Cell = /** @class */ (function () {\r\n    /**\r\n     *  creating a cell\r\n     *\r\n     * @param x index of an array\r\n     * @param y index of an array\r\n     */\r\n    function Cell(x, y) {\r\n        /** move value, used to search the shortest path */\r\n        this.move = _Data__WEBPACK_IMPORTED_MODULE_1__.size * _Data__WEBPACK_IMPORTED_MODULE_1__.size;\r\n        this.value = \"\";\r\n        this.id = x + \"_\" + y;\r\n    }\r\n    /**\r\n     * setting the HTML div to variable\r\n     *\r\n     * @param element DOM element\r\n     */\r\n    Cell.prototype.setHTMLCellElement = function (element) {\r\n        var _this = this;\r\n        this.HTMLCellElement = element;\r\n        this.HTMLCellElement.onclick = function () { return _this.changeValueClick(); };\r\n        this.HTMLCellElement.onmousemove = function () { return _this.changeValueMousemove(); };\r\n    };\r\n    /** onclick actions */\r\n    Cell.prototype.changeValueClick = function () {\r\n        var _this = this;\r\n        var x = parseInt(this.id[0]);\r\n        var y = parseInt(this.id[2]);\r\n        var temp = 0;\r\n        if (x >= 0 && x < _Data__WEBPACK_IMPORTED_MODULE_1__.size && y - 1 >= 0 && y - 1 < _Data__WEBPACK_IMPORTED_MODULE_1__.size)\r\n            if (_Board__WEBPACK_IMPORTED_MODULE_0__.board.array[y - 1][x].HTMLCellElement.children.length == 0)\r\n                temp++;\r\n        if (x >= 0 && x < _Data__WEBPACK_IMPORTED_MODULE_1__.size && y + 1 >= 0 && y + 1 < _Data__WEBPACK_IMPORTED_MODULE_1__.size)\r\n            if (_Board__WEBPACK_IMPORTED_MODULE_0__.board.array[y + 1][x].HTMLCellElement.children.length == 0)\r\n                temp++;\r\n        if (x - 1 >= 0 && x - 1 < _Data__WEBPACK_IMPORTED_MODULE_1__.size && y >= 0 && y < _Data__WEBPACK_IMPORTED_MODULE_1__.size)\r\n            if (_Board__WEBPACK_IMPORTED_MODULE_0__.board.array[y][x - 1].HTMLCellElement.children.length == 0)\r\n                temp++;\r\n        if (x + 1 >= 0 && x + 1 < _Data__WEBPACK_IMPORTED_MODULE_1__.size && y >= 0 && y < _Data__WEBPACK_IMPORTED_MODULE_1__.size)\r\n            if (_Board__WEBPACK_IMPORTED_MODULE_0__.board.array[y][x + 1].HTMLCellElement.children.length == 0)\r\n                temp++;\r\n        if (temp > 0 || this.value == \"F\") {\r\n            if (this.value == \"X\") {\r\n                _Board__WEBPACK_IMPORTED_MODULE_0__.board.array.forEach(function (row) { return row.forEach(function (el) {\r\n                    el.HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_1__.cellColor;\r\n                }); });\r\n                if (_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId != \"\")\r\n                    _Board__WEBPACK_IMPORTED_MODULE_0__.board.array[parseInt(_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId[2])][parseInt(_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId[0])].value = \"X\";\r\n                this.value = \"S\";\r\n                this.HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_1__.pathColor;\r\n                this.HTMLCellElement.style.width = \"45px\";\r\n                this.HTMLCellElement.style.height = \"45px\";\r\n                _Board__WEBPACK_IMPORTED_MODULE_0__.board.setStartCellId(this.id);\r\n            }\r\n            else if (_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId == this.id) {\r\n                this.value = \"X\";\r\n                _Board__WEBPACK_IMPORTED_MODULE_0__.board.array.forEach(function (row) { return row.forEach(function (el) {\r\n                    el.HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_1__.cellColor;\r\n                }); });\r\n                _Board__WEBPACK_IMPORTED_MODULE_0__.board.setStartCellId(\"\");\r\n            }\r\n            else if (this.value == \"F\" && this.HTMLCellElement.style.backgroundColor == _Data__WEBPACK_IMPORTED_MODULE_1__.pathColor) {\r\n                _Board__WEBPACK_IMPORTED_MODULE_0__.board.removeCellsListneres();\r\n                _Board__WEBPACK_IMPORTED_MODULE_0__.board.array.forEach(function (row) { return row.forEach(function (el) {\r\n                    if (el.HTMLCellElement.style.backgroundColor == _Data__WEBPACK_IMPORTED_MODULE_1__.pathColor)\r\n                        el.HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_1__.selectedColor;\r\n                }); });\r\n                setTimeout(function () {\r\n                    _this.value = \"X\";\r\n                    _this.HTMLCellElement.appendChild(_Board__WEBPACK_IMPORTED_MODULE_0__.board.array[parseInt(_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId[2])][parseInt(_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId[0])].HTMLCellElement.children[0]);\r\n                    _Board__WEBPACK_IMPORTED_MODULE_0__.board.array[parseInt(_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId[2])][parseInt(_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId[0])].value = \"\";\r\n                    _Board__WEBPACK_IMPORTED_MODULE_0__.board.array[parseInt(_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId[2])][parseInt(_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId[0])].HTMLCellElement.innerHTML = \"\";\r\n                    _Board__WEBPACK_IMPORTED_MODULE_0__.board.setStartCellId(\"\");\r\n                    if (_Board__WEBPACK_IMPORTED_MODULE_0__.board.checkBalls() == false)\r\n                        _Board__WEBPACK_IMPORTED_MODULE_0__.board.insertNextBalls();\r\n                    _Board__WEBPACK_IMPORTED_MODULE_0__.board.array.forEach(function (row) { return row.forEach(function (el) {\r\n                        el.HTMLCellElement.style.backgroundColor = _Data__WEBPACK_IMPORTED_MODULE_1__.cellColor;\r\n                        el.HTMLCellElement.onclick = function () { return el.changeValueClick(); };\r\n                        el.HTMLCellElement.onmousemove = function () { return el.changeValueMousemove(); };\r\n                    }); });\r\n                    _Board__WEBPACK_IMPORTED_MODULE_0__.board.updateScore();\r\n                    setTimeout(function () {\r\n                        _Board__WEBPACK_IMPORTED_MODULE_0__.board.endGame();\r\n                    }, 100);\r\n                }, 1000);\r\n            }\r\n        }\r\n    };\r\n    /** on mouseover actions */\r\n    Cell.prototype.changeValueMousemove = function () {\r\n        _Board__WEBPACK_IMPORTED_MODULE_0__.board.array.forEach(function (row) { return row.forEach(function (el) {\r\n            if (el.value == \"F\")\r\n                el.value = \"\";\r\n        }); });\r\n        if (_Board__WEBPACK_IMPORTED_MODULE_0__.board.startCellId != \"\" && this.value != \"S\" && this.value != \"X\") {\r\n            this.value = \"F\";\r\n            _Board__WEBPACK_IMPORTED_MODULE_0__.board.findPath();\r\n        }\r\n    };\r\n    return Cell;\r\n}());\r\n\r\n\n\n//# sourceURL=webpack://kulki/./src/Cell.ts?");

/***/ }),

/***/ "./src/Data.ts":
/*!*********************!*\
  !*** ./src/Data.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cellColor\": () => (/* binding */ cellColor),\n/* harmony export */   \"lineLength\": () => (/* binding */ lineLength),\n/* harmony export */   \"pathColor\": () => (/* binding */ pathColor),\n/* harmony export */   \"selectedColor\": () => (/* binding */ selectedColor),\n/* harmony export */   \"size\": () => (/* binding */ size)\n/* harmony export */ });\n/** setting the size of the board */\r\nvar size = 9;\r\n/** setting the color of selected path */\r\nvar pathColor = \"red\";\r\n/** setting the color of cell   */\r\nvar cellColor = \"#888\";\r\n/** setting the color of seleccted cell   */\r\nvar selectedColor = \"#444\";\r\n/** setting the length of line to throw the pieces  */\r\nvar lineLength = 3;\r\n\n\n//# sourceURL=webpack://kulki/./src/Data.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Board__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Board */ \"./src/Board.ts\");\n\r\n/** init of the board */\r\n_Board__WEBPACK_IMPORTED_MODULE_0__.board;\r\n\n\n//# sourceURL=webpack://kulki/./src/main.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;